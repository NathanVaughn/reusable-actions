name: Docker Attest

on:
  workflow_call:
    inputs:
      name:
        description: "The name of the image without the tag. Example: ghcr.io/owner/repo/image"
        required: true
        type: string
      attest_id:
        description: "Attestation ID. If provided, an artifact will be produced with the digest of the image, named with this ID."
        required: true
        type: string
    secrets:
      dockerhub_username:
        description: "DockerHub username"
        required: false
      dockerhub_password:
        description: "DockerHub password"
        required: false

jobs:
  attest:
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read
      attestations: write
      packages: write

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          version: latest

      - name: DockerHub Login
        if: contains(inputs.name, 'docker.io')
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.dockerhub_username }}
          password: ${{ secrets.dockerhub_password }}

      - name: Github CR Login
        if: contains(inputs.name, 'ghcr.io')
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Download Image Digest
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.attest_id }}
          path: ${{ runner.temp }}/digest.txt

      - name: Read Image Digest
        id: read
        run: echo "digest=$(cat ${{ runner.temp }}/digest.txt)" >> $GITHUB_OUTPUT
        shell: bash

      - name: Create Attestation
        id: attest
        uses: actions/attest-build-provenance@v1
        with:
            subject-name: ${{ inputs.name }}
            subject-digest: ${{ steps.read.outputs.digest }}
            push-to-registry: true